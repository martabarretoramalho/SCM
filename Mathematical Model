import pulp as plp

locals = ["L1", "L2", "L3", "L4", "L5", "L6", "L7", "L8", "L9", "L10", "L11", "L12", "L13", "L14", "L15", "L16", "L17", "L18"] # where to produce
districts = ["D1", "D2", "D3"] # where to consume

cost_instalation = {
    "L1": {"S": 17800, "M": 267000, "L": 854400},
    "L2": {"S": 17800, "M": 267000, "L": 854400},
    "L3": {"S": 17800, "M": 267000, "L": 854400},
}

fabrics_capacity = {"S": 10, "M": 150, "L": 480}

transportation_cost = {
    ('L1', 'D1'): 0.4, ('L1', 'D2'): 0.45, ('L1', 'D3'): 0.5,
    ('L2', 'D1'): 0.35, ('L2', 'D2'): 0.4, ('L2', 'D3'): 0.45,
    ('L3', 'D1'): 0.5, ('L3', 'D2'): 0.35, ('L3', 'D3'): 0.4
}

distance = {
    ('L1', 'D1'): 200, ('L1', 'D2'): 300, ('L1', 'D3'): 400,
    ('L2', 'D1'): 150, ('L2', 'D2'): 250, ('L2', 'D3'): 350,
    ('L3', 'D1'): 100, ('L3', 'D2'): 200, ('L3', 'D3'): 300
}

demand = {
    "L1": 0, "L2": 0, "L3": 0, "L4": 3.87, "L5": 0.67, "L6": 0,
    "L7": 0, "L8": 0.54, "L9": 0, "L10": 0.53, "L11": 1.34, "L12": 0, 
    "L13": 0.63, "L14": 0.62, "L15": 0.84, "L16": 5.25, "L17": 0, "L18": 0
}

energy_availability = {
    "L1": {"hydro": 760, "wind": 50, "solar": 50},
    "L2": {"hydro": 330, "wind": 410, "solar": 0},
    "L3": {"hydro": 110, "wind": 700, "solar": 40},
    "L4": {"hydro": 380, "wind": 90, "solar": 0},
    "L5": {"hydro": 270, "wind": 240, "solar": 0},
    "L6": {"hydro": 150, "wind": 390, "solar": 10},
    "L7": {"hydro": 110, "wind": 330, "solar": 10},
    "L8": {"hydro": 0, "wind": 0, "solar": 0},
    "L9": {"hydro": 200, "wind": 50, "solar": 240},
    "L10": {"hydro": 0, "wind": 0, "solar": 0},
    "L11": {"hydro": 0, "wind": 0, "solar": 0},
    "L12": {"hydro": 0, "wind": 0, "solar": 0},
    "L13": {"hydro": 0, "wind": 0, "solar": 0},
    "L14": {"hydro": 0, "wind": 140, "solar": 210},
    "L15": {"hydro": 0, "wind": 0, "solar": 0},
    "L16": {"hydro": 0, "wind": 0, "solar": 0},
    "L17": {"hydro": 0, "wind": 0, "solar": 0},
    "L18": {"hydro": 0, "wind": 0, "solar": 0},
}

modelo = plp.LpProblem("Green_Hydrogen_Supply_Chain", plp.LpMinimize)

# DECISION VARIABLE: quantity of H2 transported from local i to district j
quantity_transported = plp.LpVariable.dicts("quantity transported", [(i, j) for i in locals for j in districts], lowBound=0, cat="Continuous")

# DECISION VARIABLE: if a fabric is installed in local i with size z
fabric_installed = plp.LpVariable.dicts("fabric_installed", [(i, z) for i in locals for z in ["S", "M", "L"]], cat="binary")

# OBJECTIVE FUNCTION: minimize the costs of installation and transportation
modelo += (plp.lpSum(fabric_installed[(i, z)] * cost_instalation[i][z] for i in locals for z in ["S", "M", "L"]) 
           + plp.lpSum(quantity_transported[i, j] * transportation_cost[(i, j)] * distance [(i, j)] for i in locals for j in districts))

# CONSTRAINTS
# 1 - The total production in each local can't exceed the total capacity of that fabric
for i in locals:
    for z in ['S', 'M', 'L']:
        modelo += plp.lpSum(quantity_transported[(i, j)] for j in districts) <= fabrics_capacity[z] * fabric_installed[(i, z)], f"Capacidade_fabrica_{i}_{z}"

# 2 - Total demand in each district has to be satisfied
for j in districts:
    modelo += plp.lpSum(quantity_transported[(i, j)] for i in locals) >= demand[j], f"Demand_{j}"
    
# 3- Constraint to renewable energy
for i in locals:
    # We can define a rule of proportion, depending on how much renewable energy is necessary to produce one unit of Hâ‚‚.
    modelo += plp.lpSum(quantity_transported[(i, j)] for j in districts) <= (energy_availability[i]["hydro"] + energy_availability[i]["wind"] + energy_availability[i]["solar"]), f"Energia_disponivel_{i}"
    
